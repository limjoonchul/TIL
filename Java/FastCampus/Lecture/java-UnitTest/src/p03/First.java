package com.company.p03;

/**
 * 좋은 테스트의 조건 - first
 *
 * Fast
 * Isolated
 * Repeatable
 * Self-validating
 * Timely
 *
 * - Fast : 빠른
 *   - 전형적인 자바 시스템의 테스트 케이스는 수천 단위 (유닛테스트 기준)
 *   - 평균 200ms가 걸린다 했을 때 (느린 경우를 예로), 5000개를 수행한다 했을 때  16분이 소요된다.
 *     - 우리가 코드를 1번 수행할 때 마다 매번 16분의 테스트를 수행해야 한다.(굉장히 안좋음)
 *     - 메소드에 테스트용 우회 코드를 넣거나, stub 객체를 활용
 * - Isolated : 고립된
 *   - 테스트는 순서와 시간에 영향을 받지 않아야 한다.
 *   - 고립되지 않은 테스트는 실패했을 때 원인을 찾기 어렵다.(고립되지 않은 경우를 다봐야하므로 어렵다 후폭풍이 엄청난다 외부환경과 격리를 시켜야한다)
 *   - 테스트를하면서 다른테스트에 영향을 받지 않아야한다.
 * - Repeatable : 반복 가능한
 *   - 테스트를 반복하면 결과가 같아야 한다.
 *   - 테스트 코드 자체만으로 그 내용을 설명할 수 있어야 한다.
 *     - 외부 환경에 영향을 받지 않아야 한다.
 *   - 코드 내에서 코드가 작동한 시간, 이런 것에 따라 동작이 달라지는 것에 영향을 받지 않아야한다.
 * - Self-vlidating : 스스로 검증 가능한(굉장히 중요함)
 *   - 테스트는 반드시 기대하는 바를 단언해야 한다.
 *      - ex) main 메소드에서 이것저것 프린트해보고 동작시켜보기
 *   - 테스트는 스스로 검증하며, 테스트를 준비하는 것도 스스로 한다. arranged와 assert를 스스로한다
 *   - Continuous Integration(CI) 도구를 활용하기 위해 이것이 꼭 이루어져야 한다
 *      - 코드가 통합될때마다 자동으로 모든 테스트를 수행하고, 상태를 점검하는 프레임워크를 CI도구라고 한다.
 * - Timely : 적시의, 제때
 *   - 변화하는 코드는 테스트 코드를 항상, 꾸준히 작성해야 한다.(변화하는 코드이니깐 테스트를 작성해야 한다.)
 *   - 리뷰 시스템을 통해서 , 혹은 CI도구를 이용해서 테스트 코드 작성을 강제하기도 한다.
 *      -> peer Pressure 동료에게 드러내야 하기 때문에 압박감을 받음 테스트가 없으면 커밋이 안됨
 *   - 큰 결함 없이 기존의 잘 동작하는(변경 예정이 없는) 코드 보다는
 *     말썽을 일으키는, 계속해서 변하고 있는 동적인 코드에 대한 테스트를 먼저 작성해야한다.
 *     (현실적으로 힘들어서 이렇게 명시를 하는 것이다.)
 *
 */
public class First {
}
